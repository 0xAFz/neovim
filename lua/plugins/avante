Parse_curl_args_func = function(opts, code_opts)
    return {
        url = opts.endpoint .. "/chat/completions",
        headers = {
            ["Accept"] = "application/json",
            ["Content-Type"] = "application/json",
        },
        body = {
            model = opts.model,
            messages = require("avante.providers").copilot.parse_messages(code_opts), -- you can make your own message, but this is very advanced
            max_tokens = 2048,
            temperature = 0,
            stream = true,
        },
    }
end

Parse_response_data_func = function(data_stream, event_state, opts)
    require("avante.providers").openai.parse_response(data_stream, event_state, opts)
end

local create_avante_config = function(model, url)
    return {
        ["api_key_name"] = '',
        endpoint = url,
        model = model,
        parse_curl_args = Parse_curl_args_func,
        parse_response_data = Parse_response_data_func,
    }
end

local create_ollama_config = function(host, model)
    return create_avante_config(model, string.format("http://%s:11434/v1", host))
end

return {
    "yetone/avante.nvim",
    event = "VeryLazy",
    lazy = false,
    version = false, -- set this if you want to always pull the latest change
    opts = {
        provider = "qwen",
        openai = {
            model = "o1-preview",
        },
        vendors = {
            ---@type AvanteProvider
            qwen = create_ollama_config("127.0.0.1", "qwen2.5-coder:32b")
        }
    },
    build = "make",
    dependencies = {
        "stevearc/dressing.nvim",
        "nvim-lua/plenary.nvim",
        "MunifTanjim/nui.nvim",
        "nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
        "zbirenbaum/copilot.lua",      -- for providers='copilot'
        {
            "HakonHarnes/img-clip.nvim",
            event = "VeryLazy",
            opts = {
                default = {
                    embed_image_as_base64 = false,
                    prompt_for_file_name = false,
                    drag_and_drop = {
                        insert_mode = true,
                    },
                },
            },
        },
        {
            'MeanderingProgrammer/render-markdown.nvim',
            opts = {
                file_types = { "Avante" },
            },
            ft = { "Avante" },
        },
    },
}
